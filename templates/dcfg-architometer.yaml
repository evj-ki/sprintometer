apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: architometer
    deploymentconfig: architometer
  name: architometer
spec:
  replicas: 1
  selector:
    app: architometer
    deploymentconfig: architometer
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: architometer
        deploymentconfig: architometer
    spec:
      containers:
        - env:
            - name: spring.datasource.url
              value: jdbc:postgresql://postgresql-architometer/{{ .Values.architometer.database.schema }}
            - name: spring.datasource.username
              value: {{ .Values.postgres.username }}
            - name: spring.datasource.password
              value: {{ .Values.postgres.password }}
            - name: sonar.scheme
              value: {{ .Values.sonar.schema }}
            - name: sonar.endpoint
              value: {{ .Values.sonar.endpoint }}
            - name: sonar.port
              value: {{ .Values.sonar.port }}
            - name: sonar.project
              value: {{ .Values.sonar.project }}
            - name: sonar.token
              value: {{ .Values.sonar.token }}
            - name: sonar.useSotograph
              value: 'false'
          image: ' '
          imagePullPolicy: IfNotPresent
          name: architometer
          ports:
            - containerPort: 8080
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /opt/architometer/data
              name: postgresql-architometer-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: postgresql-architometer-data
          persistentVolumeClaim:
            claimName: postgresql-architometer-data
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - architometer
        from:
          kind: ImageStreamTag
          name: architometer:latest
      type: ImageChange